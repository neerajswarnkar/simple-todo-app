{"version":3,"sources":["component/TodoItem.js","component/TodoList.js","component/Header.js","component/InputContainer.js","App.js","index.js"],"names":["TodoItem","props","type","checked","todo","status","onChange","handleChangeProps","id","onClick","removeItemProps","title","TodoList","this","todos","map","key","Component","Header","inputContainer","state","addTodo","e","setState","target","name","value","handleSubmit","preventDefault","addTodoProps","console","log","onSubmit","placeholder","App","handleChange","removeItem","filter","addTodoItem","newTodoTask","Date","now","InputContainer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAkBeA,MAhBf,SAAkBC,GAChB,OACE,kBAAC,WAAD,KACE,2BACEC,KAAK,WACLC,QAASF,EAAMG,KAAKC,OACpBC,SAAU,kBAAML,EAAMM,kBAAkBN,EAAMG,KAAKI,OAErD,4BAAQC,QAAS,kBAAMR,EAAMS,gBAAgBT,EAAMG,KAAKI,MAAxD,UAGA,4BAAKP,EAAMG,KAAKO,SCOPC,E,uKAhBH,IAAD,OACP,OACE,4BACGC,KAAKZ,MAAMa,MAAMC,KAAI,SAAAX,GAAI,OACxB,kBAAC,EAAD,CACEY,IAAKZ,EAAKI,GACVJ,KAAMA,EACNG,kBAAmB,EAAKN,MAAMM,kBAC9BG,gBAAiB,EAAKT,MAAMS,0B,GATjBO,aCURC,EAXA,WACb,OACE,gCACE,iDACA,yG,OC8BSC,E,4MAjCbC,MAAQ,CACNT,MAAO,I,EAGTU,QAAU,SAAAC,GACR,EAAKC,SAAL,eACGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAG9BC,aAAe,SAAAL,GACbA,EAAEM,iBACF,EAAK3B,MAAM4B,aAAa,EAAKT,MAAMT,OACnC,EAAKY,SAAS,CACZZ,MAAO,KAETmB,QAAQC,IAAI,U,uDAGZ,OACE,0BAAMC,SAAUnB,KAAKc,cACnB,2BACEzB,KAAK,OACL+B,YAAY,wBACZP,MAAOb,KAAKO,MAAMT,MAClBc,KAAK,QACLnB,SAAUO,KAAKQ,UAEjB,4BAAQnB,KAAK,UAAb,Y,GA5BqBe,aCsEdiB,G,wDA7Db,aAAe,IAAD,8BACZ,gBAYFC,aAAe,SAAA3B,GACb,EAAKe,SAAS,CACZT,MAAO,EAAKM,MAAMN,MAAMC,KAAI,SAAAX,GAI1B,OAHIA,EAAKI,KAAOA,IACdJ,EAAKC,QAAUD,EAAKC,QAEfD,QAnBC,EAwBdgC,WAAa,SAAA5B,GACX,EAAKe,SAAS,CACZT,MAAM,YACD,EAAKM,MAAMN,MAAMuB,QAAO,SAAAjC,GACzB,OAAOA,EAAKI,KAAOA,SA5Bb,EAkCd8B,YAAc,SAAA3B,GACZ,IAAM4B,EAAc,CAClB/B,GAAIgC,KAAKC,MACT9B,MAAOA,EACPN,OAAQ,IAEV,EAAKkB,SAAS,CACZT,MAAM,GAAD,mBAAM,EAAKM,MAAMN,OAAjB,CAAwByB,MAE/BT,QAAQC,IAAIpB,IAzCZ,EAAKS,MAAQ,CACXN,MAAO,CACL,CACEN,GAAIgC,KAAKC,MACT9B,MAAO,cACPN,OAAQ,MAPF,E,qDA+CZ,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,MACA,kBAACqC,EAAD,CAAgBb,aAAchB,KAAKyB,cACnC,kBAAC,EAAD,CACExB,MAAOD,KAAKO,MAAMN,MAClBP,kBAAmBM,KAAKsB,aACxBzB,gBAAiBG,KAAKuB,kB,GAvDdnB,cCLlB0B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.8f0efe0e.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\n\r\nfunction TodoItem(props) {\r\n  return (\r\n    <Fragment>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={props.todo.status}\r\n        onChange={() => props.handleChangeProps(props.todo.id)}\r\n      />\r\n      <button onClick={() => props.removeItemProps(props.todo.id)}>\r\n        Remove\r\n      </button>\r\n      <li>{props.todo.title}</li>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nclass TodoList extends Component {\r\n  render() {\r\n    return (\r\n      <ul>\r\n        {this.props.todos.map(todo => (\r\n          <TodoItem\r\n            key={todo.id}\r\n            todo={todo}\r\n            handleChangeProps={this.props.handleChangeProps}\r\n            removeItemProps={this.props.removeItemProps}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <h1>Todo App in React</h1>\r\n      <p>\r\n        Add your task from below field and hit enter or just click on Add button\r\n      </p>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nclass inputContainer extends Component {\r\n  state = {\r\n    title: \"\"\r\n  };\r\n\r\n  addTodo = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.addTodoProps(this.state.title);\r\n    this.setState({\r\n      title: \"\"\r\n    });\r\n    console.log(\"Hello\");\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"add your todo task...\"\r\n          value={this.state.title}\r\n          name=\"title\"\r\n          onChange={this.addTodo}\r\n        />\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inputContainer;\r\n","import React, { Component, Fragment } from \"react\";\nimport TodoList from \"./component/TodoList\";\nimport Header from \"./component/Header\";\nimport InputContainer from \"./component/InputContainer\";\n// import List from \"./component/List\";\n// import CounterButton from \"./component/counterButton\";\n// import TodoContainer from \"./component/TodoContainer\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: [\n        {\n          id: Date.now(),\n          title: \"learn React\",\n          status: \"\"\n        }\n      ]\n    };\n  }\n\n  handleChange = id => {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.status = !todo.status;\n        }\n        return todo;\n      })\n    });\n  };\n\n  removeItem = id => {\n    this.setState({\n      todos: [\n        ...this.state.todos.filter(todo => {\n          return todo.id !== id;\n        })\n      ]\n    });\n  };\n\n  addTodoItem = title => {\n    const newTodoTask = {\n      id: Date.now(),\n      title: title,\n      status: \"\"\n    };\n    this.setState({\n      todos: [...this.state.todos, newTodoTask]\n    });\n    console.log(title);\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <Header />\n        <InputContainer addTodoProps={this.addTodoItem} />\n        <TodoList\n          todos={this.state.todos}\n          handleChangeProps={this.handleChange}\n          removeItemProps={this.removeItem}\n        ></TodoList>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n\n/*incrementCount = () => {\n    this.setState({\n      count: this.state.count + 1\n    });\n  };\n  decrementCount = () => {\n    this.setState({\n      count: this.state.count - 1\n    });\n  };\n  reset() {\n    this.setState({\n      count: 0\n    });\n  }\n\n  <h3>Count : {count}</h3>\n        <CounterButton\n          title={\"+\"}\n          task={() => this.incrementCount()}\n        ></CounterButton>\n        <CounterButton\n          title={\"-\"}\n          task={() => this.decrementCount()}\n        ></CounterButton>\n        <CounterButton\n          title={\"Reset\"}\n          task={() => this.reset()}\n        ></CounterButton>\n\n  */\n// Second project Todo\n\n/*\n\nonChange = event => {\n    this.setState({\n      term: event.target.value\n    });\n  };\n\n  Submit = event => {\n    event.preventDefault();\n    this.setState({\n      term: \"\",\n      items: [...this.state.items, this.state.term]\n    });\n  };\n\n  <form onSubmit={this.Submit}>\n          <input value={this.state.term} onChange={this.onChange} />\n          <button>Add</button>\n        </form>\n        <hr />\n        <List items={this.state.items}></List>\n\n*/\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}