{"version":3,"sources":["component/TodoItem.js","component/TodoList.js","component/Header.js","component/InputContainer.js","App.js","index.js"],"names":["TodoItem","props","className","type","checked","todo","status","onChange","handleChangeProps","id","style","fontStyle","color","opacity","textDecoration","title","onClick","removeItemProps","TodoList","this","todos","map","key","Component","Header","inputContainer","state","addTodo","e","setState","target","name","value","handleSubmit","preventDefault","addTodoProps","console","log","onSubmit","placeholder","App","handleChange","removeItem","filter","addTodoItem","newTodoTask","Date","now","InputContainer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAoCeA,MAlCf,SAAkBC,GAOhB,OACE,kBAAC,WAAD,KACE,wBAAIC,UAAU,cACZ,2BACEA,UAAU,OACVC,KAAK,WACLC,QAASH,EAAMI,KAAKC,OACpBC,SAAU,kBAAMN,EAAMO,kBAAkBP,EAAMI,KAAKI,OAErD,0BAAMP,UAAU,OAAOQ,MAAOT,EAAMI,KAAKC,OAfzB,CACpBK,UAAW,SACXC,MAAO,UACPC,QAAS,GACTC,eAAgB,gBAWsD,MAC/Db,EAAMI,KAAKU,OAGd,yBAAKb,UAAU,cACb,4BACEA,UAAU,iDACVc,QAAS,kBAAMf,EAAMgB,gBAAgBhB,EAAMI,KAAKI,MAEhD,0CAIN,wBAAIP,UAAU,WCXLgB,E,uKAhBH,IAAD,OACP,OACE,wBAAIhB,UAAU,iBACXiB,KAAKlB,MAAMmB,MAAMC,KAAI,SAAAhB,GAAI,OACxB,kBAAC,EAAD,CACEiB,IAAKjB,EAAKI,GACVJ,KAAMA,EACNG,kBAAmB,EAAKP,MAAMO,kBAC9BS,gBAAiB,EAAKhB,MAAMgB,0B,GATjBM,aCWRC,EAZA,WACb,OACE,4BAAQtB,UAAU,aAChB,iDACA,uBAAGA,UAAU,QAAb,0EAGA,wBAAIA,UAAU,W,OCgCLuB,E,4MAtCbC,MAAQ,CACNX,MAAO,I,EAGTY,QAAU,SAAAC,GACR,EAAKC,SAAL,eACGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAG9BC,aAAe,SAAAL,GACbA,EAAEM,iBACF,EAAKjC,MAAMkC,aAAa,EAAKT,MAAMX,OACnC,EAAKc,SAAS,CACZd,MAAO,KAETqB,QAAQC,IAAI,U,uDAGZ,OACE,0BAAMnC,UAAU,cAAcoC,SAAUnB,KAAKc,cAC3C,yBAAK/B,UAAU,cACb,2BACEA,UAAU,eACVC,KAAK,OACLoC,YAAY,wBACZP,MAAOb,KAAKO,MAAMX,MAClBgB,KAAK,QACLxB,SAAUY,KAAKQ,UAEjB,4BAAQzB,UAAU,uBAAuBC,KAAK,UAC5C,gD,GA/BiBoB,aCsEdiB,G,wDA7Db,aAAe,IAAD,8BACZ,gBAYFC,aAAe,SAAAhC,GACb,EAAKoB,SAAS,CACZT,MAAO,EAAKM,MAAMN,MAAMC,KAAI,SAAAhB,GAI1B,OAHIA,EAAKI,KAAOA,IACdJ,EAAKC,QAAUD,EAAKC,QAEfD,QAnBC,EAwBdqC,WAAa,SAAAjC,GACX,EAAKoB,SAAS,CACZT,MAAM,YACD,EAAKM,MAAMN,MAAMuB,QAAO,SAAAtC,GACzB,OAAOA,EAAKI,KAAOA,SA5Bb,EAkCdmC,YAAc,SAAA7B,GACZ,IAAM8B,EAAc,CAClBpC,GAAIqC,KAAKC,MACThC,MAAOA,EACPT,OAAQ,IAEV,EAAKuB,SAAS,CACZT,MAAM,GAAD,mBAAM,EAAKM,MAAMN,OAAjB,CAAwByB,MAE/BT,QAAQC,IAAItB,IAzCZ,EAAKW,MAAQ,CACXN,MAAO,CACL,CACEX,GAAIqC,KAAKC,MACThC,MAAO,cACPT,OAAQ,MAPF,E,qDA+CZ,OACE,yBAAKJ,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC8C,EAAD,CAAgBb,aAAchB,KAAKyB,cACnC,kBAAC,EAAD,CACExB,MAAOD,KAAKO,MAAMN,MAClBZ,kBAAmBW,KAAKsB,aACxBxB,gBAAiBE,KAAKuB,kB,GAvDdnB,cCLlB0B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.5c774767.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\n\r\nfunction TodoItem(props) {\r\n  const completedTask = {\r\n    fontStyle: \"italic\",\r\n    color: \"#dc3545\",\r\n    opacity: 0.5,\r\n    textDecoration: \"line-through\"\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <li className=\"media mt-3\">\r\n        <input\r\n          className=\"mt-2\"\r\n          type=\"checkbox\"\r\n          checked={props.todo.status}\r\n          onChange={() => props.handleChangeProps(props.todo.id)}\r\n        />\r\n        <span className=\"ml-3\" style={props.todo.status ? completedTask : null}>\r\n          {props.todo.title}\r\n        </span>\r\n\r\n        <div className=\"media-body\">\r\n          <button\r\n            className=\"btn btn-outline-danger ml-5 btn-sm float-right\"\r\n            onClick={() => props.removeItemProps(props.todo.id)}\r\n          >\r\n            <b>X Remove</b>\r\n          </button>\r\n        </div>\r\n      </li>\r\n      <hr className=\"my-2\" />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nclass TodoList extends Component {\r\n  render() {\r\n    return (\r\n      <ul className=\"list-unstyled\">\r\n        {this.props.todos.map(todo => (\r\n          <TodoItem\r\n            key={todo.id}\r\n            todo={todo}\r\n            handleChangeProps={this.props.handleChangeProps}\r\n            removeItemProps={this.props.removeItemProps}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"jumbotron\">\r\n      <h1>Todo App in React</h1>\r\n      <p className=\"lead\">\r\n        Add your task from below field and hit enter or just click on Add Task\r\n      </p>\r\n      <hr className=\"my-4\" />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nclass inputContainer extends Component {\r\n  state = {\r\n    title: \"\"\r\n  };\r\n\r\n  addTodo = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.addTodoProps(this.state.title);\r\n    this.setState({\r\n      title: \"\"\r\n    });\r\n    console.log(\"Hello\");\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"form-inline\" onSubmit={this.handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"add your todo task...\"\r\n            value={this.state.title}\r\n            name=\"title\"\r\n            onChange={this.addTodo}\r\n          />\r\n          <button className=\"btn btn-primary ml-2\" type=\"submit\">\r\n            <b>+ Add Task</b>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inputContainer;\r\n","import React, { Component } from \"react\";\r\nimport TodoList from \"./component/TodoList\";\r\nimport Header from \"./component/Header\";\r\nimport InputContainer from \"./component/InputContainer\";\r\n// import List from \"./component/List\";\r\n// import CounterButton from \"./component/counterButton\";\r\n// import TodoContainer from \"./component/TodoContainer\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      todos: [\r\n        {\r\n          id: Date.now(),\r\n          title: \"learn React\",\r\n          status: \"\"\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  handleChange = id => {\r\n    this.setState({\r\n      todos: this.state.todos.map(todo => {\r\n        if (todo.id === id) {\r\n          todo.status = !todo.status;\r\n        }\r\n        return todo;\r\n      })\r\n    });\r\n  };\r\n\r\n  removeItem = id => {\r\n    this.setState({\r\n      todos: [\r\n        ...this.state.todos.filter(todo => {\r\n          return todo.id !== id;\r\n        })\r\n      ]\r\n    });\r\n  };\r\n\r\n  addTodoItem = title => {\r\n    const newTodoTask = {\r\n      id: Date.now(),\r\n      title: title,\r\n      status: \"\"\r\n    };\r\n    this.setState({\r\n      todos: [...this.state.todos, newTodoTask]\r\n    });\r\n    console.log(title);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Header />\r\n        <InputContainer addTodoProps={this.addTodoItem} />\r\n        <TodoList\r\n          todos={this.state.todos}\r\n          handleChangeProps={this.handleChange}\r\n          removeItemProps={this.removeItem}\r\n        ></TodoList>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n/*incrementCount = () => {\r\n    this.setState({\r\n      count: this.state.count + 1\r\n    });\r\n  };\r\n  decrementCount = () => {\r\n    this.setState({\r\n      count: this.state.count - 1\r\n    });\r\n  };\r\n  reset() {\r\n    this.setState({\r\n      count: 0\r\n    });\r\n  }\r\n\r\n  <h3>Count : {count}</h3>\r\n        <CounterButton\r\n          title={\"+\"}\r\n          task={() => this.incrementCount()}\r\n        ></CounterButton>\r\n        <CounterButton\r\n          title={\"-\"}\r\n          task={() => this.decrementCount()}\r\n        ></CounterButton>\r\n        <CounterButton\r\n          title={\"Reset\"}\r\n          task={() => this.reset()}\r\n        ></CounterButton>\r\n\r\n  */\r\n// Second project Todo\r\n\r\n/*\r\n\r\nonChange = event => {\r\n    this.setState({\r\n      term: event.target.value\r\n    });\r\n  };\r\n\r\n  Submit = event => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      term: \"\",\r\n      items: [...this.state.items, this.state.term]\r\n    });\r\n  };\r\n\r\n  <form onSubmit={this.Submit}>\r\n          <input value={this.state.term} onChange={this.onChange} />\r\n          <button>Add</button>\r\n        </form>\r\n        <hr />\r\n        <List items={this.state.items}></List>\r\n\r\n*/\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}